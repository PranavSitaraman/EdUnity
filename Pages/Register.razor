@page "/register"
@inject NavigationManager NavigationManager;
@using System.Net
@using Microsoft.Extensions.Primitives
@using System.ComponentModel.DataAnnotations
@using System.Net.Http.Headers
@using EdUnity.Data
@code
{
    public enum AccountType
    {
        Student,
        Parent,
        Staff,
        Administrator
    }
    public class RegisterModel
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
        public AccountType Type { get; set; } = AccountType.Student;
        public bool ModelsIsNull()
        {
            return FirstName == null || LastName == null || Email == null || Password == null || Type == null;
        }
    }
}
<body>
    <div class="form-outer" style="width:50%; margin-left:auto; margin-right:auto">
        <EditForm Model="@Model" OnValidSubmit="@Submit">
            <DataAnnotationsValidator />
            <div class="form-input">
                <label>First Name</label>
                <div>
                    <br />
                    <InputText style="width: 100%" id="first-name" placeholder="Alice" @bind-Value="Model.FirstName" />
                </div>
            </div>
            <br />
            <div class="form-input">
                <label>Last Name</label>
                <div>
                    <br />
                    <InputText style="width: 100%" id="last-name" placeholder="Smith" @bind-Value="Model.LastName" />
                </div>
            </div>
            <br />
            <div class="form-input">
                <label>Type</label>
                <div>
                    <br />
                    <InputSelectEnum style="width: 100%" id="type" @bind-Value="Model.Type" />
                </div>
            </div>
            <br />
            <div class="form-input">
                <label>Email</label>
                <div>
                    <br />
                    <InputText style="width: 100%" id="email" placeholder="alice-smith@example.com" @bind-Value="Model.Email" />
                </div>
            </div>
            <br />
            <div class="form-input">
                <label>Password</label>
                <div>
                    <br />
                    <InputText style="width: 100%" id="password" placeholder="password" @bind-Value="Model.Password" />
                </div>
            </div>
            <div class="form-error">
                <ValidationSummary />
                @if (!String.IsNullOrEmpty(resultMessage))
                {
                    <div class="form-error-message"><br>@resultMessage</div>
                }
            </div>
            <br />
            <div class="centered-button-group" style="float:left; width:50%">
                <button type="submit">Register</button>
            </div>
        </EditForm>
    </div>
</body>
@code
{
    private RegisterModel Model = new();
    private string resultMessage;
    private async void Submit()
    {
        if (Model.ModelsIsNull()) resultMessage = "Please enter valid credentials";
        else
        {
            resultMessage = "Your credentials will be verified and authorized shortly. Please check back in 24-72 hours.";
            StateHasChanged();
            await Task.Delay(3000);
            NavigationManager.NavigateTo("/login", forceLoad: true);
        }
        StateHasChanged();
    }
}