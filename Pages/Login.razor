@page "/login"
@inject NavigationManager NavigationManager;
@using System.Net
@using Microsoft.Extensions.Primitives
@using Newtonsoft.Json
<section>
</section>

@code
{
	public class LoginModel
	{
		public string Email { get; set; }
		public string Password { get; set; }
		public bool ModelsIsNull() { return Email == null || Password == null; }
	}
}

<section>
	<form class="form-outer">
		<img src="img/edunity-transparent.png" />
		<EditForm Model="@Model" OnValidSubmit="@Submit">
			<DataAnnotationsValidator />
			<div>
				<label class="form-label">Email</label>
				<div>
					<InputText id="email" type="email" class="form-control" placeholder="demo@edunity.org" @bind-Value="Model.Email" />
				</div>
			</div>
			<div>
				<label class="form-label">Password</label>
				<div>
					<InputText type="password" class="form-control" placeholder="password" @bind-Value="Model.Password" />
				</div>
			</div>
			<ValidationSummary />
			@if (!String.IsNullOrEmpty(resultMessage))
			{
				<div class="form-error-message">@resultMessage</div>
			}
			<div class="row mb-4 pt-4">
				<div class="col d-flex justify-content-center">
					<div class="form-check">
						<input class="form-check-input" type="checkbox" checked />
					</div>
					<label class="form-check-label">Remember me</label>
				</div>
			</div>
			<div class="col d-flex justify-content-center">
				<button type="submit" class="btn mb-4">Sign In</button>
			</div>
			<div class="text-center">
				<p>New to EdUnity? <a href="/register">Register</a></p>
			</div>
		</EditForm>
	</form>
</section>

@code
{
	private LoginModel Model = new();
	private string resultMessage;
	private int poop;
	private List<Tuple<string, string>> logins = new();
	
	protected async override void OnInitialized()
	{
		await ReadUsers();
		poop = logins.Count();
	}
	
	private async Task ReadUsers()
	{
		using var stream = await FileSystem.OpenAppPackageFileAsync("users.json");
		using (var reader = new StreamReader(stream))
		{
			var json = await reader.ReadToEndAsync();
			var users = JsonConvert.DeserializeObject<List<EdUnity.Pages.Register.UserModel>>(json);
			foreach (var u in users)
			{
				logins.Add(new Tuple<string, string>(u.Email, u.Password));
			}
		}
	}
	
	private async void Submit()
	{
		if (Model.ModelsIsNull())
		{
			resultMessage = "Please enter valid credentials!";
		}
		else if (logins.Contains(new Tuple<string, string>(Model.Email, Model.Password)))
		{
			resultMessage = "Login successful!";
			StateHasChanged();
			await Task.Delay(2000);
			NavigationManager.NavigateTo("/home", forceLoad: true);
		}
		else
		{
			resultMessage = "Invalid credentials!";
		}
		StateHasChanged();
	}
}