@page "/login"
@inject NavigationManager NavigationManager;
@using System.Net
@using Microsoft.Extensions.Primitives
@code
{
    public class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
        public bool ModelsIsNull() { return Email == null || Password == null; }
    }
}
<body>
    <img src="img/edunity-transparent.png" style="margin: auto; width:50%;"/>
    <div class="form-outer" style="width:50%; margin-left:auto; margin-right:auto">
        <EditForm Model="@Model" OnValidSubmit="@Submit">
            <DataAnnotationsValidator />
            <div class="form-input">
                <label>Email</label>
                <div>
                    <br />
                    <InputText style="width: 100%" id="email" placeholder="alice-smith@example.com" @bind-Value="Model.Email" />
                </div>
            </div>
            <br />
            <div class="form-input">
                <label>Password</label>
                <div>
                    <br />
                    <InputText style="width: 100%" id="password" placeholder="password" @bind-Value="Model.Password" />
                </div>
            </div>
            <div class="form-error">
                <ValidationSummary />
                @if (!String.IsNullOrEmpty(resultMessage))
                {
                    <div class="form-error-message"><br>@resultMessage</div>
                }
            </div>
            <br />
            <div class="centered-button-group" style="float:left; width:25%">
                <button type="submit">Sign In</button>
            </div>
            <div class="centered-button-group" style="float:right; width:25%">
                <button type="button" @onclick=Registration>Register</button>
            </div>
        </EditForm>
    </div>
</body>
@code
{
    private LoginModel Model = new();
    private string resultMessage;
    private async void Submit()
    {
        if (Model.ModelsIsNull()) resultMessage = "Please enter valid credentials";
        else if (Model.Email.Trim().Equals("fbla@gmail.com") && Model.Password.Equals("fbla"))
        {
            resultMessage = "Login successful";
            StateHasChanged();
            await Task.Delay(2000);
            EdUnity.Shared.NavMenu.ToggleNavMenu();
            NavigationManager.NavigateTo("/home", forceLoad: true);
        }
        else if (Model.Email.Equals("fbla@gmail.com")) resultMessage = "Incorrect password";
        else resultMessage = "Account with specified email does not exist";
        StateHasChanged();
    }
    private async void Registration()
    {
        await Task.Delay(100);
        NavigationManager.NavigateTo("/register");
    }
}