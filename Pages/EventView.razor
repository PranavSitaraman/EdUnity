@using EdUnity.Data
@if (_modelReady)
{
    <div class="body-view" style="height: @(_height)vh;">
        <div class="control-bar">
            <ion-icon name="bookmark" class="save-icon"></ion-icon>
            <ion-icon name="@_iconName" class="expand-icon" @onclick="Resize"></ion-icon>
            <ion-icon class="close-icon" name="close-outline" @onclick="CloseCallback"></ion-icon>
        </div>
        <div class="post-view">
            <h1>@Loc.Name</h1>
            <h2>@Loc.Time</h2>
            <h4>@Loc.Lat , @Loc.Lon</h4>
            @if (!signup)
            {
                <button class="post-view" @onclick="Signup">Sign Up!</button>
            }
            else
            {
                <button class="post-view" @onclick="Unsignup">Cancel Signup</button>
            }
        </div>
    </div>
}
@code
{
    [Parameter] public Pin Loc { get; set; }
    [Parameter] public Action CloseCallback { get; set; }
    private bool _modelReady { get; set; } = false;
    private int _height { get; set; } = 40;
    private string _iconName { get; set; } = "chevron-up-outline";
    public bool signup;
    protected override async Task OnInitializedAsync()
    {
        signup = false;
        _modelReady = true;
        StateHasChanged();
    }
    private async void Signup()
    {
        signup = true;
        StateHasChanged();
    }
    private async void Unsignup()
    {
        signup = false;
        StateHasChanged();
    }
    private void Resize()
    {
        if (_height == 40)
        {
            _height = 90;
            _iconName = "chevron-down-outline";
        }
        else if (_height == 90)
        {
            _height = 40;
            _iconName = "chevron-up-outline";
        }
        StateHasChanged();
    }
}