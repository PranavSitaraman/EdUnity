@page "/calendar"

@using System.Globalization
@using System.Linq

@code {
	public class Event
	{
		public string title { get; set; }
		public string description { get; set; }
		public DateTime date { get; set; }
	}
}

<div>
	<button @onclick="prevMonth">Previous Month</button>
	<h3>@today.ToString()</h3>
	<h3>@firstDayThisMonth</h3>
	@*<h3>@firstDayThisMonth</h3>*@
	<button @onclick="nextMonth">Next Month</button>
</div>

<table class="calendar">
	<thead>
		<tr class="days">
			<th>Sun</th>
			<th>Mon</th>
			<th>Tue</th>
			<th>Wed</th>
			<th>Thu</th>
			<th>Fri</th>
			<th>Sat</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var week in weeks)
		{
			<tr>
				<th>
					@foreach (var day in week)
					{

					}
				</th>
			</tr>
		}
	</tbody>
</table>


@code {
	private DateTime today = DateTime.Today;
	private String firstDayThisMonth;
	private String monthYear => today.ToString("MMMM yyyy", CultureInfo.InvariantCulture);

	private List<List<DateTime>> weeks => GetLayout(today);
	private Dictionary<String, List<Event>> events = new Dictionary<string, List<Event>>();

	private void prevMonth()
	{
		today = today.AddMonths(-1);
	}

	private void nextMonth()
	{
		today = today.AddMonths(1);
	}

	private List<List<DateTime>> GetLayout(DateTime date)
	{
		DateTime z = new DateTime(date.Year, date.Month, 1);
		firstDayThisMonth = z.ToString() + " " + z.DayOfWeek;
		// DateTime firstDayPrevMonth = new DateTime((date.Year - Convert.ToInt32(!(date.Month - 1 < 1))), Math.Abs((date.Month - 1) % 12), 1);


		return new List <List<DateTime>>();
	}

}
